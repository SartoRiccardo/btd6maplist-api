DROP MATERIALIZED VIEW IF EXISTS listmap_points CASCADE;
CREATE MATERIALIZED VIEW listmap_points AS
SELECT
    indexes.n AS placement,
    ROUND(
        (
            (SELECT value FROM config WHERE name='points_bottom_map')::float *
            POWER(
                (
                    (SELECT value FROM config WHERE name='points_top_map')::float /
                    (SELECT value FROM config WHERE name='points_bottom_map')::float
                ),
                POWER(
                    (1 + (1 - indexes.n) / ((SELECT value FROM config WHERE name='map_count')::float - 1)),
                    (SELECT value FROM config WHERE name='formula_slope')::float
                )
            )
        )::numeric,
        (SELECT value FROM config WHERE name='decimal_digits')::int
    ) AS points
FROM GENERATE_SERIES(1, (SELECT value FROM config WHERE name='map_count')::int) AS indexes(n);

----------------------------
-- LCCs for each list map --
----------------------------

DROP VIEW IF EXISTS lccs_by_map CASCADE;
CREATE VIEW lccs_by_map AS
SELECT DISTINCT ON (r.map, r.format)
    r.map, r.format, lcc.leftover, lcc.id
FROM list_completions r
JOIN leastcostchimps lcc
    ON r.lcc = lcc.id
WHERE r.accepted_by IS NOT NULL
    AND r.deleted_on IS NULL
ORDER BY r.map, r.format, lcc.leftover DESC, r.created_on ASC;


---------------
-- Points LB --
---------------

CREATE OR REPLACE VIEW leaderboard_maplist_points AS
WITH config_values AS (
    SELECT
        (SELECT value::float FROM config WHERE name='points_multi_bb') AS points_multi_bb,
        (SELECT value::float FROM config WHERE name='points_multi_gerry') AS points_multi_gerry,
        (SELECT value::float FROM config WHERE name='points_extra_lcc') AS points_extra_lcc
),
maps_points AS (
    SELECT
        lmp.points, m.code
    FROM maps m
    JOIN listmap_points lmp
        -- Implicitly puts placement BETWEEN 1 AND map_count
        ON lmp.placement = m.placement_curver
    WHERE m.deleted_on IS NULL
),
unique_runs AS (
	SELECT DISTINCT
		lcp.user_id, r.map, r.black_border, r.no_geraldo, r.lcc=lccs.id AS current_lcc
    FROM list_completions r
    JOIN listcomp_players lcp
        ON r.id = lcp.run
    LEFT JOIN lccs_by_map lccs
        ON lccs.map = r.map AND lccs.format = r.format
    -- Filter one subquery higher for selction on time machine
    WHERE r.format = 1
        AND r.accepted_by IS NOT NULL
        AND r.deleted_on IS NULL
),
-- https://stackoverflow.com/a/78963508/13033269
comp_user_map_modifiers AS (
	SELECT uq.user_id, uq.map,
		CASE WHEN bool_or(uq.black_border AND uq.no_geraldo) THEN cv.points_multi_bb*cv.points_multi_gerry
			 ELSE GREATEST(CASE WHEN bool_or(uq.black_border) THEN cv.points_multi_bb ELSE 0 END
							+ CASE WHEN bool_or(uq.no_geraldo) THEN cv.points_multi_gerry ELSE 0 END, 1)
			 END AS multiplier,
        CASE WHEN bool_or(uq.current_lcc) THEN cv.points_extra_lcc ELSE 0 END AS additive
   FROM unique_runs uq
   CROSS JOIN config_values cv
   GROUP BY uq.user_id, uq.map, cv.points_multi_bb, cv.points_multi_gerry, cv.points_extra_lcc
),
user_points AS (
	SELECT
		modi.user_id,
		(mwp.points * modi.multiplier + modi.additive)
		    * CASE WHEN modi.user_id = 640298779643215902 THEN -1 ELSE 1 END
		AS points
	FROM comp_user_map_modifiers modi
    JOIN maps_points mwp
        ON modi.map = mwp.code
),
leaderboard AS (
    SELECT
        up.user_id,
        SUM(up.points) AS score
    FROM user_points up
    GROUP BY up.user_id
)
SELECT user_id, score, RANK() OVER (ORDER BY score DESC) AS placement
FROM leaderboard
ORDER BY placement ASC, user_id DESC;


CREATE OR REPLACE VIEW leaderboard_maplist_all_points AS
WITH config_values AS (
    SELECT
        (SELECT value::float FROM config WHERE name='points_multi_bb') AS points_multi_bb,
        (SELECT value::float FROM config WHERE name='points_multi_gerry') AS points_multi_gerry,
        (SELECT value::float FROM config WHERE name='points_extra_lcc') AS points_extra_lcc
),
maps_points AS (
    SELECT
        lmp.points, m.code
    FROM maps m
    JOIN listmap_points lmp
        ON lmp.placement = m.placement_curver
    WHERE m.deleted_on IS NULL
),
unique_runs AS (
	SELECT DISTINCT
		lcp.user_id, r.map, r.black_border, r.no_geraldo, r.lcc=lccs.id AS current_lcc
    FROM list_completions r
    JOIN listcomp_players lcp
        ON r.id = lcp.run
    LEFT JOIN lccs_by_map lccs
        ON lccs.map = r.map AND lccs.format = r.format
    WHERE r.format = 2
        AND r.accepted_by IS NOT NULL
        AND r.deleted_on IS NULL
),
comp_user_map_modifiers AS (
	SELECT uq.user_id, uq.map,
		CASE WHEN bool_or(uq.black_border AND uq.no_geraldo) THEN cv.points_multi_bb*cv.points_multi_gerry
			 ELSE GREATEST(CASE WHEN bool_or(uq.black_border) THEN cv.points_multi_bb ELSE 0 END
							+ CASE WHEN bool_or(uq.no_geraldo) THEN cv.points_multi_gerry ELSE 0 END, 1)
			 END AS multiplier,
        CASE WHEN bool_or(uq.current_lcc) THEN cv.points_extra_lcc ELSE 0 END AS additive
   FROM unique_runs uq
   CROSS JOIN config_values cv
   GROUP BY uq.user_id, uq.map, cv.points_multi_bb, cv.points_multi_gerry, cv.points_extra_lcc
),
user_points AS (
	SELECT
		modi.user_id,
		(mwp.points * modi.multiplier + modi.additive)
		    * CASE WHEN modi.user_id = 640298779643215902 THEN -1 ELSE 1 END
		AS points
	FROM comp_user_map_modifiers modi
    JOIN maps_points mwp
        ON modi.map = mwp.code
),
leaderboard AS (
    SELECT
        up.user_id,
        SUM(up.points) AS score
    FROM user_points up
    GROUP BY up.user_id
)
SELECT user_id, score, RANK() OVER (ORDER BY score DESC) AS placement
FROM leaderboard
ORDER BY placement ASC, user_id DESC;


------------
-- LCC LB --
------------

CREATE OR REPLACE VIEW leaderboard_maplist_lccs AS
WITH config_values AS (
    SELECT
        (SELECT value::int FROM config WHERE name='map_count') AS map_count
),
leaderboard AS (
    SELECT lcp.user_id, COUNT(lcp.user_id) AS score
    FROM lccs_by_map lccs
    JOIN list_completions r
        ON r.lcc = lccs.id
    JOIN maps m
        ON r.map = m.code
    JOIN listcomp_players lcp
        ON r.id = lcp.run
    CROSS JOIN config_values cv
    WHERE m.placement_curver BETWEEN 1 AND cv.map_count
        AND lccs.format = 1
        AND m.deleted_on IS NULL
        AND r.accepted_by IS NOT NULL
        AND r.deleted_on IS NULL
    GROUP BY lcp.user_id
)
SELECT user_id, score, RANK() OVER(ORDER BY score DESC) AS placement
FROM leaderboard
ORDER BY placement ASC, user_id DESC;


CREATE OR REPLACE VIEW leaderboard_maplist_all_lccs AS
WITH config_values AS (
    SELECT
        (SELECT value::int FROM config WHERE name='map_count') AS map_count
),
leaderboard AS (
    SELECT lcp.user_id, COUNT(lcp.user_id) AS score
    FROM lccs_by_map lccs
    JOIN list_completions r
        ON r.lcc = lccs.id
    JOIN maps m
        ON r.map = m.code
    JOIN listcomp_players lcp
        ON r.id = lcp.run
    CROSS JOIN config_values cv
    WHERE m.placement_allver BETWEEN 1 AND cv.map_count
        AND lccs.format = 2
        AND m.deleted_on IS NULL
        AND r.accepted_by IS NOT NULL
        AND r.deleted_on IS NULL
    GROUP BY lcp.user_id
)
SELECT user_id, score, RANK() OVER(ORDER BY score DESC) AS placement
FROM leaderboard
ORDER BY placement ASC, user_id DESC;


---------------------
-- Expert List LBs --
---------------------

CREATE OR REPLACE VIEW leaderboard_experts_points AS
WITH expert_maps AS (
    SELECT m.code,
        c1.value::int AS points,
        c2.value::int AS extra_nogerry
    FROM maps m
    JOIN config c1
        ON m.difficulty = c1.difficulty
        AND c1.name LIKE 'exp_points_%'
    JOIN config c2
        ON m.difficulty = c2.difficulty
        AND c2.name LIKE 'exp_nogerry_points_%'
    WHERE m.deleted_on IS NULL
        AND m.new_version IS NULL
),
completion_points AS (
    SELECT
        lc.map,
        ply.user_id,
        BOOL_OR(lc.no_geraldo) AS no_geraldo
    FROM list_completions lc
    JOIN listcomp_players ply
        ON lc.id = ply.run
    WHERE (
            lc.format BETWEEN 51 AND 100
            OR lc.format = 1  -- Explist completions are a superset of Maplist Completions
        )
        AND lc.accepted_by IS NOT NULL
        AND lc.deleted_on IS NULL
    GROUP BY (lc.map, ply.user_id)
),
leaderboard AS (
    SELECT 
        cp.user_id, 
        SUM(
            m.points 
            + CASE WHEN cp.no_geraldo THEN m.extra_nogerry ELSE 0 END
        ) AS score
    FROM completion_points cp
    JOIN expert_maps m
        ON m.code = cp.map
    GROUP BY (cp.user_id)
)
SELECT user_id, score, RANK() OVER(ORDER BY score DESC) AS placement
FROM leaderboard
ORDER BY placement ASC, user_id DESC;


CREATE OR REPLACE VIEW leaderboard_experts_lccs AS
WITH valid_lccs AS (
    SELECT DISTINCT ON (map) *
    FROM lccs_by_map
    WHERE (format BETWEEN 51 AND 100 OR format = 1)
    ORDER BY map, leftover DESC
),
leaderboard AS (
    SELECT lcp.user_id, COUNT(lcp.user_id) AS score
    FROM valid_lccs lccs
    JOIN list_completions r
        ON r.lcc = lccs.id
    JOIN maps m
        ON r.map = m.code
    JOIN listcomp_players lcp
        ON r.id = lcp.run
    WHERE m.difficulty >= 0
        AND m.deleted_on IS NULL
        AND r.accepted_by IS NOT NULL
        AND r.deleted_on IS NULL
    GROUP BY lcp.user_id
)
SELECT user_id, score, RANK() OVER(ORDER BY score DESC) AS placement
FROM leaderboard
ORDER BY placement ASC, user_id DESC;


--------------------
-- No Geraldo LBs --
--------------------

CREATE OR REPLACE VIEW leaderboard_maplist_no_geraldo AS
WITH no_geraldo_completions AS (
    SELECT DISTINCT r.map, lcp.user_id
    FROM list_completions r
    JOIN listcomp_players lcp
        ON r.id = lcp.run
    WHERE r.no_geraldo
        AND r.format = 1
        AND r.accepted_by IS NOT NULL
        AND r.deleted_on IS NULL
),
leaderboard AS (
    SELECT r.user_id, COUNT(*) AS score
    FROM no_geraldo_completions r
    JOIN maps m
        ON r.map = m.code
    WHERE m.placement_curver BETWEEN 1 AND (SELECT value::int FROM config WHERE name='map_count')
        AND m.deleted_on IS NULL
    GROUP BY r.user_id
)
SELECT user_id, score, RANK() OVER(ORDER BY score DESC) AS placement
FROM leaderboard
ORDER BY placement ASC, user_id DESC;

CREATE OR REPLACE VIEW leaderboard_maplist_all_no_geraldo AS
WITH no_geraldo_completions AS (
    SELECT DISTINCT r.map, lcp.user_id
    FROM list_completions r
    JOIN listcomp_players lcp
        ON r.id = lcp.run
    WHERE r.no_geraldo
        AND (r.format = 1 OR r.format = 2)
        AND r.accepted_by IS NOT NULL
        AND r.deleted_on IS NULL
),
leaderboard AS (
    SELECT r.user_id, COUNT(*) AS score
    FROM no_geraldo_completions r
    JOIN maps m
        ON r.map = m.code
    WHERE m.placement_allver BETWEEN 1 AND (SELECT value::int FROM config WHERE name='map_count')
        AND m.deleted_on IS NULL
    GROUP BY r.user_id
)
SELECT user_id, score, RANK() OVER(ORDER BY score DESC) AS placement
FROM leaderboard
ORDER BY placement ASC, user_id DESC;

CREATE OR REPLACE VIEW leaderboard_experts_no_geraldo AS
WITH no_geraldo_completions AS (
    SELECT DISTINCT r.map, lcp.user_id
    FROM list_completions r
    JOIN listcomp_players lcp
        ON r.id = lcp.run
    WHERE r.no_geraldo
        AND (r.format BETWEEN 51 AND 100 OR r.format = 1)
        AND r.accepted_by IS NOT NULL
        AND r.deleted_on IS NULL
),
leaderboard AS (
    SELECT r.user_id, COUNT(*) AS score
    FROM no_geraldo_completions r
    JOIN maps m
        ON r.map = m.code
    WHERE m.difficulty >= 0
        AND m.deleted_on IS NULL
    GROUP BY r.user_id
)
SELECT user_id, score, RANK() OVER(ORDER BY score DESC) AS placement
FROM leaderboard
ORDER BY placement ASC, user_id DESC;

----------------------
-- Black Border LBs --
----------------------

CREATE OR REPLACE VIEW leaderboard_maplist_black_border AS
WITH no_geraldo_completions AS (
    SELECT DISTINCT r.map, lcp.user_id
    FROM list_completions r
    JOIN listcomp_players lcp
        ON r.id = lcp.run
    WHERE r.black_border
        AND r.format = 1
        AND r.accepted_by IS NOT NULL
        AND r.deleted_on IS NULL
),
leaderboard AS (
    SELECT r.user_id, COUNT(*) AS score
    FROM no_geraldo_completions r
    JOIN maps m
        ON r.map = m.code
    WHERE m.placement_curver BETWEEN 1 AND (SELECT value::int FROM config WHERE name='map_count')
        AND m.deleted_on IS NULL
    GROUP BY r.user_id
)
SELECT user_id, score, RANK() OVER(ORDER BY score DESC) AS placement
FROM leaderboard
ORDER BY placement ASC, user_id DESC;

CREATE OR REPLACE VIEW leaderboard_maplist_all_black_border AS
WITH no_geraldo_completions AS (
    SELECT DISTINCT r.map, lcp.user_id
    FROM list_completions r
    JOIN listcomp_players lcp
        ON r.id = lcp.run
    WHERE r.black_border
        AND (r.format = 1 OR r.format = 2)
        AND r.accepted_by IS NOT NULL
        AND r.deleted_on IS NULL
),
leaderboard AS (
    SELECT r.user_id, COUNT(*) AS score
    FROM no_geraldo_completions r
    JOIN maps m
        ON r.map = m.code
    WHERE m.placement_allver BETWEEN 1 AND (SELECT value::int FROM config WHERE name='map_count')
        AND m.deleted_on IS NULL
    GROUP BY r.user_id
)
SELECT user_id, score, RANK() OVER(ORDER BY score DESC) AS placement
FROM leaderboard
ORDER BY placement ASC, user_id DESC;

CREATE OR REPLACE VIEW leaderboard_experts_black_border AS
WITH no_geraldo_completions AS (
    SELECT DISTINCT r.map, lcp.user_id
    FROM list_completions r
    JOIN listcomp_players lcp
        ON r.id = lcp.run
    WHERE r.black_border
        AND (r.format BETWEEN 51 AND 100 OR r.format = 1)
        AND r.accepted_by IS NOT NULL
        AND r.deleted_on IS NULL
),
leaderboard AS (
    SELECT r.user_id, COUNT(*) AS score
    FROM no_geraldo_completions r
    JOIN maps m
        ON r.map = m.code
    WHERE m.difficulty >= 0
        AND m.deleted_on IS NULL
    GROUP BY r.user_id
)
SELECT user_id, score, RANK() OVER(ORDER BY score DESC) AS placement
FROM leaderboard
ORDER BY placement ASC, user_id DESC;


---------------------------
-- Leaderboard snapshots --
---------------------------

DROP MATERIALIZED VIEW IF EXISTS snapshot_maplist_points CASCADE;
CREATE MATERIALIZED VIEW snapshot_maplist_points AS
SELECT * FROM leaderboard_maplist_points;

--DROP MATERIALIZED VIEW IF EXISTS snapshot_maplist_all_points CASCADE;
--CREATE MATERIALIZED VIEW snapshot_maplist_all_points AS
--SELECT * FROM leaderboard_maplist_all_points;

DROP MATERIALIZED VIEW IF EXISTS snapshot_experts_points CASCADE;
CREATE MATERIALIZED VIEW snapshot_experts_points AS
SELECT * FROM leaderboard_experts_points;


DROP MATERIALIZED VIEW IF EXISTS snapshot_maplist_lccs CASCADE;
CREATE MATERIALIZED VIEW snapshot_maplist_lccs AS
SELECT * FROM leaderboard_maplist_lccs;

--DROP MATERIALIZED VIEW IF EXISTS snapshot_maplist_all_lccs CASCADE;
--CREATE MATERIALIZED VIEW snapshot_maplist_all_lccs AS
--SELECT * FROM leaderboard_maplist_all_lccs;

DROP MATERIALIZED VIEW IF EXISTS snapshot_experts_lccs CASCADE;
CREATE MATERIALIZED VIEW snapshot_experts_lccs AS
SELECT * FROM leaderboard_experts_lccs;


DROP MATERIALIZED VIEW IF EXISTS snapshot_maplist_no_geraldo CASCADE;
CREATE MATERIALIZED VIEW snapshot_maplist_no_geraldo AS
SELECT * FROM leaderboard_maplist_no_geraldo;

--DROP MATERIALIZED VIEW IF EXISTS snapshot_maplist_all_no_geraldo CASCADE;
--CREATE MATERIALIZED VIEW snapshot_maplist_all_no_geraldo AS
--SELECT * FROM leaderboard_maplist_all_no_geraldo;

DROP MATERIALIZED VIEW IF EXISTS snapshot_experts_no_geraldo CASCADE;
CREATE MATERIALIZED VIEW snapshot_experts_no_geraldo AS
SELECT * FROM leaderboard_experts_no_geraldo;


DROP MATERIALIZED VIEW IF EXISTS snapshot_maplist_black_border CASCADE;
CREATE MATERIALIZED VIEW snapshot_maplist_black_border AS
SELECT * FROM leaderboard_maplist_black_border;

--DROP MATERIALIZED VIEW IF EXISTS snapshot_maplist_all_black_border CASCADE;
--CREATE MATERIALIZED VIEW snapshot_maplist_all_black_border AS
--SELECT * FROM leaderboard_maplist_all_black_border;

DROP MATERIALIZED VIEW IF EXISTS snapshot_experts_black_border CASCADE;
CREATE MATERIALIZED VIEW snapshot_experts_black_border AS
SELECT * FROM leaderboard_experts_black_border;